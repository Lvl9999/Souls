--getgenv().SoulFarming = true

local Notif = loadstring(game:HttpGet("https://raw.githubusercontent.com/insanedude59/notiflib/main/main"))();

repeat wait() until game:IsLoaded();

task.spawn(function() 
repeat wait() until game.CoreGui:FindFirstChild("RobloxPromptGui");
    while getgenv().SoulFarming == true do wait(3);
        pcall(function()
            if game.CoreGui.RobloxPromptGui.promptOverlay:FindFirstChild("ErrorPrompt") then
                repeat
                    local servers = {}
                    for _, server in pairs(game:GetService("HttpService"):JSONDecode(game:HttpGetAsync("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")).data) do
                        if type(server) == "table" and server.maxPlayers > server.playing and server.id ~= game.JobId then
                            table.insert(servers, server.id);
                        end
                    end
                    if #servers > 0 then
                        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)]);
                    else
                        print("Couldn't find a server.");
                    end
                    wait(5);
                until false
            end
        end)
    end
end)


task.spawn(function()
    while getgenv().SoulFarming == true do
        pcall(function()
            game:GetService("ReplicatedStorage"):WaitForChild("GlobalUsedRemotes"):WaitForChild("Play"):FireServer();
        end)
        wait(0.45);
    end
end)

task.spawn(function()
    while getgenv().SoulFarming == true do wait(0.15);
        pcall(function()
            for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
                if v:IsA("BasePart") then
                    v.CanCollide = false
                end
            end
        end)
    end
end)

task.spawn(function()
    pcall(function()
        if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("ItemStorage") and not game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("ItemStorage").Enabled then
            local servers = {}
            for _, server in pairs(game:GetService("HttpService"):JSONDecode(game:HttpGetAsync("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")).data) do
                if type(server) == "table" and server.maxPlayers > server.playing and server.id ~= game.JobId then
                    table.insert(servers, server.id);
                end
            end
            if #servers > 0 then
                game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)]);
            else
                print("Couldn't find a server.");
            end
        end
    end)
end)

if getgenv().SoulFarming == true then
    Notif:Notification("Soul Counter  ðŸ‘»",game:GetService("Players").LocalPlayer.Data.Soul.Value.." Souls", "GothamSemibold", "Gotham",15);
end
task.spawn(function()
    while getgenv().SoulFarming == true do
        pcall(function()
            if workspace.Item2:FindFirstChild("SoulSpawn") and workspace.Item2:FindFirstChild("SoulSpawn"):IsA("Part") and workspace.Item2:FindFirstChild("SoulSpawn").CFrame.Position ~= Vector3.new(-291.166412, -64.5565033, 1667.29993) then
                local Table2 = {}

                for i,v in ipairs(workspace.Item2:GetChildren()) do
                    if v:IsA("Part") and v.Name ~= "SoulSpawn" then
                        table.insert(Table2,v);
                    end
                end

                local Table3 = {}

                for i,v in ipairs(workspace.Item2:GetChildren()) do
                    if v:IsA("Part") and v.Name == "SoulSpawn" and v.CFrame.Position ~= Vector3.new(-291.166412, -64.5565033, 1667.29993) then
                        table.insert(Table3,v);
                    end
                end

                local BigTable = {} for i,v in pairs(Table2) do table.insert(BigTable,v)end for i,v in pairs(Table3) do table.insert(BigTable,v) end for i = #BigTable,2, -1 do BigTable[i],BigTable[math.random(i)] = BigTable[math.random(i)],BigTable[i]end game:GetService("Players").LocalPlayer.Character:MoveTo(BigTable[1].Position);
                -------------------------------------------------------
                for i,v in pairs(workspace.Item:GetDescendants()) do
                    if v:IsA("ProximityPrompt") then
                        fireproximityprompt(v, 0);
                    end
                end

                for i,v in pairs(workspace.Item2:GetDescendants()) do
                    if v:IsA("ProximityPrompt") then
                        fireproximityprompt(v, 0);
                    end
                end
            else
                if not getgenv().Rejoined == true then
                    pcall(function()
                        local servers = {}
                        for _, server in pairs(game:GetService("HttpService"):JSONDecode(game:HttpGetAsync("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")).data) do
                           if type(server) == "table" and server.maxPlayers > server.playing and server.id ~= game.JobId then
                                table.insert(servers, server.id)
                            end
                        end
                        if #servers > 0 then
                            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)])
                        else
                            print("Couldn't find a server.")
                        end
                        getgenv().Rejoined = true
                    end)
                end
            end
        end)
        wait(0.15);
    end
end)
