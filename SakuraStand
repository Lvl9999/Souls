


local Table1 = {}

for i, v in ipairs(workspace.Item:GetChildren()) do
    if game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position.Y - v.Position.Y < 50 and (game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position - v.Position).Magnitude < 90000 then
        table.insert(Table1, v);
    end
end

local Table2 = {}

for i,v in ipairs(workspace.Item2:GetChildren()) do
    if v:IsA("Part") and v.Name ~= "SoulSpawn" then
        table.insert(Table2,v);
    end
end

local Table3 = {}

for i,v in ipairs(workspace.Item2:GetChildren()) do
    if v:IsA("Part") and v.Name == "SoulSpawn" and v.CFrame.Position ~= Vector3.new(-291.166412, -64.5565033, 1667.29993) then
        table.insert(Table3,v);
    end
end

local BigTable = {} for i,v in pairs(Table1) do table.insert(BigTable,v) end for i,v in pairs(Table2) do table.insert(BigTable,v) end for i,v in pairs(Table3) do table.insert(BigTable,v) end for i = #BigTable, 2,-1 do BigTable[i],BigTable[math.random(i)] = BigTable[math.random(i)],BigTable[i] end game:GetService("Players").LocalPlayer.Character:MoveTo(table.remove(BigTable,1).Position);




-- getgenv().SoulFarming = true
getgenv().Noclip = true

repeat wait() until game:IsLoaded();
wait(1);

task.spawn(function()
    while getgenv().SoulFarming == true do
        pcall(function()
            for i = 1,5 do wait(0.25);
                local vim = game:GetService('VirtualInputManager')
                local x = game:GetService('Players').LocalPlayer.PlayerGui.Loading.BG.SkipButton

                vim:SendMouseButtonEvent(x.AbsolutePosition.X + x.AbsoluteSize.X / 2, x.AbsolutePosition.Y + 50, 0, true, x, 1);
                vim:SendMouseButtonEvent(x.AbsolutePosition.X + x.AbsoluteSize.X / 2, x.AbsolutePosition.Y + 50, 0, false, x, 1);

                local vim = game:GetService('VirtualInputManager')
                local x = game:GetService('Players').LocalPlayer.PlayerGui.FrontMenu.Play

                vim:SendMouseButtonEvent(x.AbsolutePosition.X + x.AbsoluteSize.X / 2, x.AbsolutePosition.Y + 50, 0, true, x, 1);
                vim:SendMouseButtonEvent(x.AbsolutePosition.X + x.AbsoluteSize.X / 2, x.AbsolutePosition.Y + 50, 0, false, x, 1);
                wait(0.0015);
            end
        end)
        wait(1);
    end
end)

task.spawn(function()
    while getgenv().Noclip == true do wait(0.15);
        pcall(function()
            for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
                if v:IsA("BasePart") then
                    v.CanCollide = false
                end
            end
        end)
    end
end)

game.StarterGui:SetCore("SendNotification", {Title = "Souls Counter  ðŸ‘»";Text = game:GetService("Players").LocalPlayer.Data.Soul.Value.." Souls";Duration = 5;});
wait(1);
task.spawn(function()
    while getgenv().SoulFarming == true do
        pcall(function()
            if workspace.Item2:FindFirstChild("SoulSpawn") and workspace.Item2:FindFirstChild("SoulSpawn"):IsA("Part") and workspace.Item2:FindFirstChild("SoulSpawn").CFrame.Position ~= Vector3.new(-291.166412, -64.5565033, 1667.29993) then
                local Table1 = {}

                local Selling = {"Arrow","Barrel","Rokakaka","Stop Sign","Mysterious Camera" ,"Haunted Sword","Spin Manual","Hamon Manual","Stone Mask","Bomu Bomu Devil Fruit","Mochi Mochi Devil Fruit","Bari Bari Devil Fruit"}
                for i,v in pairs(Selling) do
                    local args = {[1] = v};
                    game:GetService("ReplicatedStorage"):WaitForChild("GlobalUsedRemotes"):WaitForChild("SellItem"):FireServer(unpack(args));
                end

                for i,v in ipairs(workspace.Item:GetChildren()) do
                    if game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position.Y - v.Position.Y < 50 and (game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position - v.Position).Magnitude < 90000 then
                        table.insert(Table1,v);
                    end
                end

                local Table2 = {}

                for i,v in ipairs(workspace.Item2:GetChildren()) do
                    if v:IsA("Part") and v.Name ~= "SoulSpawn" then
                        table.insert(Table2,v);
                    end
                end

                local Table3 = {}

                for i,v in ipairs(workspace.Item2:GetChildren()) do
                    if v:IsA("Part") and v.Name == "SoulSpawn" and v.CFrame.Position ~= Vector3.new(-291.166412, -64.5565033, 1667.29993) then
                        table.insert(Table3,v);
                    end
                end

                local BigTable = {} for i,v in pairs(Table1) do table.insert(BigTable,v) end for i,v in pairs(Table2) do table.insert(BigTable,v) end for i,v in pairs(Table3) do table.insert(BigTable,v) end for i = #BigTable, 2,-1 do BigTable[i],BigTable[math.random(i)] = BigTable[math.random(i)],BigTable[i] end game:GetService("Players").LocalPlayer.Character:MoveTo(table.remove(BigTable,1).Position);                
                -------------------------------------------------------
                for i,v in pairs(workspace.Item:GetDescendants()) do
                    if v:IsA("ProximityPrompt") then
                        fireproximityprompt(v, 0);
                    end
                end

                for i,v in pairs(workspace.Item2:GetDescendants()) do
                    if v:IsA("ProximityPrompt") then
                        fireproximityprompt(v, 0);
                    end
                end
            else
                if not getgenv().Rejoined == true then
                    pcall(function()
                        local servers = {}
                        for _, server in pairs(game:GetService("HttpService"):JSONDecode(game:HttpGetAsync("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")).data) do
                           if type(server) == "table" and server.maxPlayers > server.playing and server.id ~= game.JobId then
                                table.insert(servers, server.id)
                            end
                        end
                        if #servers > 0 then
                            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)])
                        else
                            print("Couldn't find a server.")
                        end
                        getgenv().Rejoined = true
                    end)
                end
            end
        end)
        wait(0.15);
    end
end)
